//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.NewsSearchServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsSearchServiceRef.INewsSearchService")]
    public interface INewsSearchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsSearchService/GetNews", ReplyAction="http://tempuri.org/INewsSearchService/GetNewsResponse")]
        string GetNews(string searchString);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsSearchService/GetNews", ReplyAction="http://tempuri.org/INewsSearchService/GetNewsResponse")]
        System.Threading.Tasks.Task<string> GetNewsAsync(string searchString);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsSearchServiceChannel : Client.NewsSearchServiceRef.INewsSearchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsSearchServiceClient : System.ServiceModel.ClientBase<Client.NewsSearchServiceRef.INewsSearchService>, Client.NewsSearchServiceRef.INewsSearchService {
        
        public NewsSearchServiceClient() {
        }
        
        public NewsSearchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsSearchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsSearchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsSearchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetNews(string searchString) {
            return base.Channel.GetNews(searchString);
        }
        
        public System.Threading.Tasks.Task<string> GetNewsAsync(string searchString) {
            return base.Channel.GetNewsAsync(searchString);
        }
    }
}
